@page "/"
@using Calculations
@inject IJSRuntime JSRuntime

<div id="calculator-div" class="pb-5 p-sm-5 p-md-5 p-lg-5 p-xl-5 calculator-text-div d-flex align-items-end">
    <input type="text" id="calculator-textbox" readonly class="calculator-input align-middle" onblur="this.focus()" bind="@calculatorInput" autofocus />
</div>
<div class="d-flex justify-content-center">
    <table class="calculator-table">
        <tr>
            <td>
                <button class="calulator-button calculator-button-small" onclick="insertText('log10')">log10</button>
            </td>
            <td>
                <button class="calulator-button calculator-button-small" onclick="insertText('log')">logₓ</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('(')">(</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText(')')">)</button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="calulator-button" onclick="insertText('^')">yˣ</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('r')">ˣ√</button>
            </td>
            <td>
                <button class="calulator-button" onclick="deleteText()">⌫</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('/')">/</button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="calulator-button" onclick="insertText('7')">7</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('8')">8</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('9')">9</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('*')">*</button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="calulator-button" onclick="insertText('4')">4</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('5')">5</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('6')">6</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('-')">-</button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="calulator-button" onclick="insertText('1')">1</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('2')">2</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('3')">3</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('+')">+</button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="calulator-button" onclick="@ClearText">C</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('0')">0</button>
            </td>
            <td>
                <button class="calulator-button" onclick="insertText('.')">.</button>
            </td>
            <td>
                <button class="calulator-button" onclick="@RunCalculation">=</button>
            </td>
        </tr>
    </table>
</div>

@functions{
    string calculatorInput;
    Calculator calculator = new Calculator();

    void RunCalculation()
    {
        double product = calculator.Calculation(calculatorInput).Calculate();
        calculatorInput = product.ToString();

        JSRuntime.InvokeAsync<object>("reFocusText", "");
    }

    protected override void OnAfterRender()
    {
        JSRuntime.InvokeAsync<object>("activateTextArea", "");
    }

    void ClearText()
    {
        calculatorInput = string.Empty;
    }
}